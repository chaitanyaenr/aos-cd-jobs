- job:
    block-downstream: false
    block-upstream: false
    builders:
    - shell: |
        set -eo pipefail

        if [[ ! -d "${WORKSPACE}/perf-dept" ]]; then
        git clone https://${GITHUB_TOKEN}@github.com/redhat-performance/perf-dept.git
        fi
        export PRIVATE_KEY=${WORKSPACE}/perf-dept/ssh_keys/id_rsa_perf
        chmod 600 ${PRIVATE_KEY}
        export OPTIONS="-o StrictHostKeyChecking=no -o ServerAliveInterval=1 -o ConnectionAttempts=100"
        export KUBECONFIG="/root/.kube/config"


        if [[ "${USE_PROXY}" == "true" ]]; then
        ssh ${OPTIONS} -o ProxyCommand="ssh -i ${PRIVATE_KEY} -W %h:%p ${PROXY_USER}@${PROXY_HOST}" -i ${PRIVATE_KEY} ${ORCHESTRATION_USER}@${JUMP_HOST} 'bash -s' <<ENDSSH
        set -e
        sudo su -
        export POLL_ATTEMPTS=$POLL_ATTEMPTS
        export RHCOS_WORKER_COUNT=$RHCOS_WORKER_COUNT
        export RHCOS_METADATA_LABEL_PREFIX=$RHCOS_METADATA_LABEL_PREFIX
        echo "Running ocp scaleup"
        if [[ ! -d /root/scale-ci-ansible ]]; then
        git clone https://github.com/redhat-performance/scale-ci-ansible.git /root/scale-ci-ansible
        fi
        if [[ -f /root/scale-ci-ansible/OCP-4.X/scaleup.inv ]]; then
        rm /root/scale-ci-ansible/OCP-4.X/scaleup.inv
        fi
        cat <<-EOF >> /root/scale-ci-ansible/OCP-4.X/scaleup.inv
        [orchestration]
        $JUMP_HOST
        EOF
        ansible-playbook -vvv -i /root/scale-ci-ansible/OCP-4.X/scaleup.inv /root/scale-ci-ansible/OCP-4.X/scale.yml
        exit
        ENDSSH
        else
        ssh ${OPTIONS} -i ${PRIVATE_KEY} ${ORCHESTRATION_USER}@${JUMP_HOST} 'bash -s'<<ENDSSH
        set -e
        export POLL_ATTEMPTS=$POLL_ATTEMPTS
        export RHCOS_WORKER_COUNT=$RHCOS_WORKER_COUNT
        export RHCOS_METADATA_LABEL_PREFIX=$RHCOS_METADATA_LABEL_PREFIX
        echo "Running ocp scaleup"
        if [[ ! -d /root/scale-ci-ansible ]]; then
        git clone https://github.com/redhat-performance/scale-ci-ansible.git /root/scale-ci-ansible
        fi
        if [[ -f /root/scale-ci-ansible/OCP-4.X/scaleup.inv ]]; then
        rm /root/scale-ci-ansible/OCP-4.X/scaleup.inv
        fi
        cat <<-EOF >> /root/scale-ci-ansible/OCP-4.X/scaleup.inv
        [orchestration]
        $JUMP_HOST
        EOF
        ansible-playbook -vvv -i /root/scale-ci-ansible/OCP-4.X/scaleup.inv /root/scale-ci-ansible/OCP-4.X/scale.yml
        exit
        ENDSSH
        fi
    concurrent: true
    description: This job runs scales up OCP 4.x clusters to the desired node count.
    disabled: false
    name: OCP_4.X_SCALEUP.yml
    node: cucushift && oc311
    parameters:
    - string:
        default: ''
        description: "The jump host needs to have the inventory used to install openshift\
          \ and kube config.\t\t\t\t\t\t "
        name: JUMP_HOST
    - string:
        default: ''
        description: The user to use when sshing to the JUMP_HOST.
        name: ORCHESTRATION_USER
    - bool:
        default: false
        description: ''
        name: USE_PROXY
    - string:
        default: ''
        description: The name to use in the ssh ProxyCommand.
        name: PROXY_USER
    - string:
        default: ''
        description: The server to use in the ssh ProxyCommand.
        name: PROXY_HOST
    - string:
        default: ''
        description: ''
        name: POLL_ATTEMPTS
    - string:
        default: ''
        description: ''
        name: RHCOS_WORKER_COUNT
    - string:
        default: ''
        description: ''
        name: RHCOS_METADATA_LABEL_PREFIX
    - string:
        default: ''
        description: ''
        name: GITHUB_TOKEN
    project-type: freestyle
    properties:
    - raw:
        xml: |
          <hudson.plugins.disk__usage.DiskUsageProperty plugin="disk-usage@0.28" />
    - raw:
        xml: |
          <com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty plugin="gitlab-plugin@1.5.3">
          <gitLabConnection />
          </com.dabsquared.gitlabjenkins.connection.GitLabConnectionProperty>
    - raw:
        xml: |
          <org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty plugin="zmq-event-publisher@0.0.5">
          <enabled>false</enabled>
          </org.jenkinsci.plugins.ZMQEventPublisher.HudsonNotificationProperty>
    - raw:
        xml: |
          <com.synopsys.arc.jenkins.plugins.ownership.jobs.JobOwnerJobProperty plugin="ownership@0.11.0">
          <ownership>
          <ownershipEnabled>true</ownershipEnabled>
          <primaryOwnerId>nelluri</primaryOwnerId>
          <coownersIds class="sorted-set" />
          </ownership>
          </com.synopsys.arc.jenkins.plugins.ownership.jobs.JobOwnerJobProperty>
    - raw:
        xml: |
          <com.sonyericsson.rebuild.RebuildSettings plugin="rebuild@1.27">
          <autoRebuild>false</autoRebuild>
          <rebuildDisabled>false</rebuildDisabled>
          </com.sonyericsson.rebuild.RebuildSettings>
    - raw:
        xml: |
          <hudson.plugins.throttleconcurrents.ThrottleJobProperty plugin="throttle-concurrents@2.0.1">
          <maxConcurrentPerNode>0</maxConcurrentPerNode>
          <maxConcurrentTotal>0</maxConcurrentTotal>
          <categories class="java.util.concurrent.CopyOnWriteArrayList" />
          <throttleEnabled>false</throttleEnabled>
          <throttleOption>project</throttleOption>
          <limitOneJobWithMatchingParams>false</limitOneJobWithMatchingParams>
          <paramsToUseForLimit />
          </hudson.plugins.throttleconcurrents.ThrottleJobProperty>
    publishers: []
    triggers: []
    wrappers:
    - workspace-cleanup:
        dirmatch: false
    - ansicolor:
        colormap: xterm
